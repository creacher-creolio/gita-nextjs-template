// lib/utils/locales.ts
import { SUPPORTED_LOCALES } from "@/i18n/locales";

// Locale configuration with display names and flags
export interface LocaleConfig {
    code: string;
    name: string;
    flag: string;
}

// Map of locale codes to their display information
const localeDisplayMap: Record<string, { name: string; flag: string }> = {};

// Initialize locale display mappings
localeDisplayMap.en = { name: "English", flag: "üá∫üá∏" };
localeDisplayMap.es = { name: "Espa√±ol", flag: "üá™üá∏" };
localeDisplayMap.fr = { name: "Fran√ßais", flag: "üá´üá∑" };
localeDisplayMap.de = { name: "Deutsch", flag: "üá©üá™" };
localeDisplayMap.ru = { name: "–†—É—Å—Å–∫–∏–π", flag: "üá∑üá∫" };
localeDisplayMap["zh-TW"] = { name: "ÁπÅÈ´î‰∏≠Êñá", flag: "üáπüáº" };
localeDisplayMap["zh-CN"] = { name: "ÁÆÄ‰Ωì‰∏≠Êñá", flag: "üá®üá≥" };
localeDisplayMap.ja = { name: "Êó•Êú¨Ë™û", flag: "üáØüáµ" };
localeDisplayMap.ko = { name: "ÌïúÍµ≠Ïñ¥", flag: "üá∞üá∑" };
localeDisplayMap.pt = { name: "Portugu√™s", flag: "üáµüáπ" };
localeDisplayMap.it = { name: "Italiano", flag: "üáÆüáπ" };
localeDisplayMap.nl = { name: "Nederlands", flag: "üá≥üá±" };
localeDisplayMap.pl = { name: "Polski", flag: "üáµüá±" };
localeDisplayMap.tr = { name: "T√ºrk√ße", flag: "üáπüá∑" };
localeDisplayMap.ar = { name: "ÿßŸÑÿπÿ±ÿ®Ÿäÿ©", flag: "üá∏üá¶" };
localeDisplayMap.hi = { name: "‡§π‡§ø‡§®‡•ç‡§¶‡•Ä", flag: "üáÆüá≥" };
localeDisplayMap.th = { name: "‡πÑ‡∏ó‡∏¢", flag: "üáπüá≠" };
localeDisplayMap.vi = { name: "Ti·∫øng Vi·ªát", flag: "üáªüá≥" };
localeDisplayMap.sv = { name: "Svenska", flag: "üá∏üá™" };
localeDisplayMap.da = { name: "Dansk", flag: "üá©üá∞" };
localeDisplayMap.no = { name: "Norsk", flag: "üá≥üá¥" };
localeDisplayMap.fi = { name: "Suomi", flag: "üá´üáÆ" };

// Get locale configurations for supported locales
export function getSupportedLocaleConfigs(): LocaleConfig[] {
    return SUPPORTED_LOCALES.map(code => ({
        code,
        name: localeDisplayMap[code]?.name || code.toUpperCase(),
        flag: localeDisplayMap[code]?.flag || "üåê",
    }));
}

// Get the list of supported locale codes
export function getSupportedLocaleCodes(): readonly string[] {
    return SUPPORTED_LOCALES;
}
